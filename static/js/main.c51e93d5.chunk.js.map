{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","memo","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","then","response","json","FILTERS","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","filter","setFilter","_useState5","Date","_useState6","updatedAt","setUpdatedAt","useEffect","sort","a","b","localeCompare","slice","handleNewFetch","newFilter","_jsxs","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6BC,gBAAK,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OACrDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAE5BE,EAAKG,MAJDH,EAAKI,GAKP,KAEJ,ICbA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICHDC,EACC,MADDA,EAEK,UAFLA,EAGM,WAGCC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA4BJ,mBAAsC,MAAKK,EAAAH,YAAAE,EAAA,GAAhEE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAkCR,mBAAS,IAAIS,MAAOC,EAAAR,YAAAM,EAAA,GAA/CG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BG,qBAAU,WACR,OAAQP,GACN,KAAKT,EDTFL,IACJE,MAAK,SAAAX,GAAK,OAAIA,EACZ+B,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEzB,KAAK2B,cAAcD,EAAE1B,KAAK,IAC3C4B,MAAM,EAAG,EAAE,ICOExB,KAAKS,GACjB,MAEF,KAAKN,EDNFL,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMuB,QAAO,SAAAxB,GAAQ,MAAiB,QAAjBA,EAALO,KAA2B,GAAC,ICMzCK,KAAKS,GACnB,MAEF,KAAKN,EACHL,IAASE,KAAKS,GAMpB,GAAG,CAACG,EAAQK,IAEZ,IAAMQ,EAAiB,SAACC,GACtBb,EAAUa,GACVR,EAAa,IAAIH,KACnB,EAEA,OACEY,eAAA,OAAKC,UAAU,MAAKrC,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEuC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAetB,EAAY,EAACZ,SAC5C,mBAIDD,cAAA,UACEuC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EAAetB,EAAiB,EAACZ,SACjD,uBAIDD,cAAA,UACEuC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAetB,EAAgB,EAACZ,SAChD,mBAIDD,cAACJ,EAAS,CAACG,MAAOA,MAGxB,ECtEA0C,IAASC,OACP1C,cAACc,EAAG,IACJ6B,SAASC,eAAe,Q","file":"static/js/main.c51e93d5.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nconst FILTERS = {\n  all: 'all',\n  onlyRed: 'onlyRed',\n  onlyFive: 'onlyFive',\n} as const;\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [filter, setFilter] = useState<keyof typeof FILTERS | null>(null);\n  const [updatedAt, setUpdatedAt] = useState(new Date());\n\n  useEffect((): void => {\n    switch (filter) {\n      case FILTERS.onlyFive:\n        get5First().then(setGoods);\n        break;\n\n      case FILTERS.onlyRed:\n        getRedGoods().then(setGoods);\n        break;\n\n      case FILTERS.all:\n        getAll().then(setGoods);\n        break;\n\n      default:\n        break;\n    }\n  }, [filter, updatedAt]);\n\n  const handleNewFetch = (newFilter: keyof typeof FILTERS) => {\n    setFilter(newFilter);\n    setUpdatedAt(new Date());\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleNewFetch(FILTERS.all)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleNewFetch(FILTERS.onlyFive)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleNewFetch(FILTERS.onlyRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}